var n=class{async parse(e){let t=this;return typeof e=="object"?this.useCanvas(e):typeof e=="string"&&/^http[s]?:\/\/.*(png|jpg|jpeg|bmp|gif|svg|)$/.test(e)?t.loadImage(e).then(r=>t.useCanvas(r)).catch(r=>new Error(`Failed to load image: ${r.message}`)):Promise.reject(new Error("Invalid image source or format."))}loadImage(e){return new Promise((t,r)=>{let a=new Image;a.crossOrigin="anonymous",a.src=e+"?v="+Math.random(),a.onload=()=>t(a),a.onerror=s=>r(s)})}useCanvas(e){if(typeof uni<"u")return new Error("\u6682\u4E0D\u652F\u6301uniapp");{let t=document.createElement("canvas");t.width=e.width,t.height=e.height;let r=t.getContext("2d");return r?(r.drawImage(e,0,0,e.width,e.height),t.toDataURL("image/png")):new Error("Failed to get canvas context")}}},i=new n;export{i as imgToBase64};
