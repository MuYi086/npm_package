const{execSync:execSync}=require("child_process"),commonExecGitStatement=t=>{try{return execSync(t,{encoding:"utf8"}).trim()}catch(t){return new Error("执行git命令失败")}},getGitBranch=()=>commonExecGitStatement("git symbolic-ref --short -q HEAD"),getGitName=()=>commonExecGitStatement("git config user.name"),getGitEmail=()=>commonExecGitStatement("git config user.email"),getGitShowRefTags=()=>{const t=commonExecGitStatement("git show-ref --tags");let e=[];return t&&"string"==typeof t&&(e=t.match(/refs\/tags\/.+/gi)),e},getLatestTagFromTagsArr=(t=[])=>{if(t&&t.length>0){return t[t.length-1].replace("refs/tags/","")}return""},getOriginProjectName=()=>{let t="";const e=commonExecGitStatement("git remote -v");if(e&&e.includes("push")){t=e.match(/\/.*\.git/g)[1].replace("/","").replace(".git","")}return t},getGitLastCommitInfo=()=>({commitName:commonExecGitStatement("git log -1 --pretty=format:%cn"),commitEmail:commonExecGitStatement("git log -1 --pretty=format:%ce"),commitDate:commonExecGitStatement("git log -1 --pretty=format:%ci"),commitSubject:commonExecGitStatement("git log -1 --pretty=format:%s"),commitHash:commonExecGitStatement("git log -1 --pretty=format:%H")}),gitCommitInfo=()=>{const t=getOriginProjectName(),e=getGitBranch(),m=getGitName(),i=getGitEmail(),{commitName:o,commitEmail:c,commitDate:a,commitSubject:r,commitHash:g}=getGitLastCommitInfo(),n=getGitShowRefTags();return{projectName:t,branch:e,gitUserName:m,gitUserEmail:i,commitName:o,commitEmail:c,commitDate:a,commitSubject:r,commitHash:g,latestTag:getLatestTagFromTagsArr(n)}};module.exports=gitCommitInfo;