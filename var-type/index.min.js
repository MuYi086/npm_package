class VarType{constructor(){this.typeList=["Null","Undefined","Object","Array","ArrayBuffer","String","Number","Boolean","Function","RegExp","Date","FormData","File","Blob","URLSearchParams","Set","WeakSet","Map","WeakMap"],this.init()}type(t){return Object.prototype.toString.call(t).match(/\[object (.*?)\]/)[1].toLowerCase()}init(){this.typeList.forEach((t=>{this["is"+t]=e=>this.type(e)===t.toLowerCase()}))}isBuffer(t){return null!==t&&!this.isUndefined(t)&&null!==t.constructor&&!this.isUndefined(t.constructor)&&this.isFunction(t.constructor.isBuffer)&&t.constructor.isBuffer(t)}isStream(t){return this.isObject(t)&&this.isFunction(t.pipe)}isProxy(t){const e=function(t){const e=typeof t;return t?.constructor==={}.constructor||"undefined"===e||null===t||"boolean"===e||"number"===e||"string"===e||t instanceof Date||t instanceof RegExp||t instanceof Blob||t instanceof File||t instanceof FileList||t instanceof ArrayBuffer||t instanceof ImageData||t instanceof ImageBitmap||t instanceof Array||t instanceof Map||t instanceof Set}(t),n=function(t){try{postMessage(t,"*")}catch(t){if(25===t?.code)return!1}return!0}(t);return e&&!n}}module.exports=new VarType;